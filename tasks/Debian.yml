---
- name: Ensure packages are installed
  apt:
    name: "{{ glpiinventoryagent_pkgs }}"
  when: glpi_install_pkgs
  tags: [glpiinventoryagent]

- name: Ensure GlpiinventoryAgent package is available
  apt:
    deb: "{{ glpiinventoryagent_deb }}"
  when: glpi_install_pkgs
  tags: [glpiinventoryagent]

- name: Creates Work Directory
  file: path="{{ glpi_workdir }}" state=directory

- name: Creates Inventory Directory
  file: path="{{ glpi_inventorydir }}" state=directory

- name: Download Installer
  get_url: url="{{ glpiagenturl }}" dest="{{ glpi_workdir }}" mode=0755
- name: Copy install script
  copy: src=glpi-agent-install.sh dest="{{ glpi_workdir }}" owner=root group=root mode=0755
- name: Run Installer
  ansible.builtin.command:
    cmd: "{{ glpi_workdir }}/glpi-agent-install.sh {{ glpiinventoryagent_server_url }} {{  glpi_inventorydir }}"
    chdir: "{{ glpi_workdir }}"
  register: installlog
  become: yes

- name: Run Installer
  ansible.builtin.command:
    cmd: "perl {{ glpi_workdir }}/{{ glpiagentinstaller|quote }} -s {{ glpiinventoryagent_server_url }} -l {{  glpi_inventorydir }} --type={{ glpi_install_tasks }}"
    chdir: "{{ glpi_workdir }}"
  register: installlog
  become: yes
  tags: [never]

- name: Install log stderr
  debug:
    msg: "{{ installlog.stderr }}"
- name: Install log stdout
  debug:
    msg: "{{ installlog.stdout }}"

- name: Run Agent
  ansible.builtin.command:
    cmd: "{{ glpiinventoryagent_command }}"
    chdir: "{{ glpi_workdir }}"
  register: runlog
  become: yes
  when: glpi_initialrun

- name: disable glpi-agent
  service:
    name: glpi-agent
    state: disabled
  when: not glpi_daemon

- name: Stop glpi-agent
  service:
    name: glpi-agent
    state: stopped
  when: not glpi_daemon
